plugins {
    id 'java'
    id 'application'
}

repositories {
    mavenCentral() // Основной репозиторий Maven
}
dependencies {
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.7'
    implementation project(':common')

    // Реализация логгера

    implementation 'com.thoughtworks.xstream:xstream:1.4.20'
    implementation 'xmlpull:xmlpull:1.1.3.1'
    // Дополнительная зависимость для работы с XML
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8' // Устанавливаем кодировку для компиляции
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
}





tasks.withType(JavaExec) {
    systemProperty "file.encoding", "UTF-8"
    systemProperty "sun.jnu.encoding", "UTF-8"
    jvmArgs "-Dfile.encoding=UTF-8"
}

applicationDefaultJvmArgs = [
        "-Dfile.encoding=UTF-8",
        "-Dsun.jnu.encoding=UTF-8"
]

application {
    mainClass = 'src/main/java/server/Server'
}

jar {
    manifest {
        attributes 'Main-Class': 'server.Server' // Замените на ваш главный класс
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }


    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
run {
    systemProperty "file.encoding", "utf-8"
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}
